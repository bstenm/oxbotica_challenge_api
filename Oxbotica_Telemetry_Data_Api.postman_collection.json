{
	"info": {
		"_postman_id": "0f8ad436-e7fe-4777-a126-1fbb6f68f058",
		"name": "Oxbotica_Telemetry_Data_Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/telemetry-data (valid parameters)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c5159474-3924-4866-9f9b-1edd29c29e48",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(responseHeaders[\"Content-Type\"]).to.equal('application/json');",
							"});",
							"",
							"",
							"pm.test(\"Response is json\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Json response\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    // test log entry",
							"    pm.expect(jsonData.log).to.eql(\"2017-02-20-14-42-25-outdoor-autonomy-02\");",
							"    ",
							"    // test start and end entries",
							"    pm.expect(jsonData.start).to.equal(parseInt(pm.variables.get(\"valid_start\"), 10));",
							"    pm.expect(jsonData.end).to.equal(parseInt(pm.variables.get(\"valid_end\"), 10));",
							"    ",
							"    // test data entry",
							"    pm.expect(jsonData.data.length).to.eql(9);",
							"});",
							"",
							"pm.test(\"Response time is less than 400ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/telemetry-data?start={{valid_start}}&end={{valid_end}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"telemetry-data"
					],
					"query": [
						{
							"key": "start",
							"value": "{{valid_start}}"
						},
						{
							"key": "end",
							"value": "{{valid_end}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/telemetry-data (missing parameters)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c5159474-3924-4866-9f9b-1edd29c29e48",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(responseHeaders[\"Content-Type\"]).to.equal('application/json');",
							"});",
							"",
							"",
							"pm.test(\"Response is json\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Json response\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    // test log entry",
							"    pm.expect(jsonData.log).to.eql(\"2017-02-20-14-42-25-outdoor-autonomy-02\");",
							"    ",
							"    // test start and end entries",
							"    pm.expect(jsonData.start).to.equal(null);",
							"    pm.expect(jsonData.end).to.equal(parseInt(pm.variables.get(\"valid_end\"), 10));",
							"    ",
							"    // test data entry",
							"    pm.expect(jsonData.data.length).to.eql(11);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/telemetry-data?end={{valid_end}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"telemetry-data"
					],
					"query": [
						{
							"key": "end",
							"value": "{{valid_end}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/telemetry-data (start > end)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c5159474-3924-4866-9f9b-1edd29c29e48",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(responseHeaders[\"Content-Type\"]).to.equal('application/json');",
							"});",
							"",
							"pm.test(\"Response is json\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Json response\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    // test log entry",
							"    pm.expect(jsonData.log).to.eql(\"2017-02-20-14-42-25-outdoor-autonomy-02\");",
							"    ",
							"    // test start and end entries",
							"    pm.expect(jsonData.start).to.equal(parseInt(pm.variables.get(\"bigger_than_end\"), 10));",
							"    pm.expect(jsonData.end).to.equal(parseInt(pm.variables.get(\"valid_end\"), 10));",
							"    ",
							"    // test data entry",
							"    pm.expect(jsonData.data.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/telemetry-data?start={{bigger_than_end}}&end={{valid_end}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"telemetry-data"
					],
					"query": [
						{
							"key": "start",
							"value": "{{bigger_than_end}}"
						},
						{
							"key": "end",
							"value": "{{valid_end}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/telemetry-data (invalid parameter)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c5159474-3924-4866-9f9b-1edd29c29e48",
						"exec": [
							"pm.test(\"Status code is 400 (Bad request)\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response is json\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Content-Type is json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(responseHeaders[\"Content-Type\"]).to.equal('application/json');",
							"});",
							"",
							"pm.test(\"Error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message.start).to.be.a('string');",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/telemetry-data?start={{invalid_start}}&end={{valid_end}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"telemetry-data"
					],
					"query": [
						{
							"key": "start",
							"value": "{{invalid_start}}"
						},
						{
							"key": "end",
							"value": "{{valid_end}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "695800dc-d9a7-4ba1-b0e2-e894f4c5e1dd",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e5ceaff8-0dc3-4252-ab8f-e9f19aabbed6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c1458c70-ecf7-40c7-807f-d42e800c33a4",
			"key": "base_url",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"id": "71d3afe8-69a6-4e6c-b1eb-3a5d62890083",
			"key": "valid_start",
			"value": "1487601759486376",
			"type": "string"
		},
		{
			"id": "3a6ffefa-3947-4cf0-b806-0fef021180a8",
			"key": "valid_end",
			"value": "1487601761591361",
			"type": "string"
		},
		{
			"id": "c0b473e9-f4da-419f-8953-656c1371117c",
			"key": "bigger_than_end",
			"value": "1487601762131744",
			"type": "string"
		},
		{
			"id": "b94779d9-c407-4868-b1a9-e85584915237",
			"key": "invalid_start",
			"value": "invalid",
			"type": "string"
		}
	]
}